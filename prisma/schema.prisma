generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Requirement {
  id            Int               @id @default(autoincrement())
  name          String?           @db.VarChar(255)
  incomeProfile IncomeProfileEnum
  residenceType ResidenceTypeEnum

  preApprovalFee    Int @default(0) @db.Int
  processingFee     Int @default(0) @db.Int
  rate              Int @default(0) @db.Int
  lifeInsurance     Int @default(0) @db.Int
  propertyInsurance Int @default(0) @db.Int
  valuationFee      Int @default(0) @db.Int

  requiredDocuments RequiredDocument[] @relation("RequirementToRequiredDocuments")

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt
}

model RequiredDocument {
  id            Int              @id @default(autoincrement())
  name          String?          @db.VarChar(255)
  documentType  DocumentTypeEnum
  isMandatory   Boolean          @default(false)
  createdAt     DateTime         @default(now()) @db.DateTime(0)
  updatedAt     DateTime         @default(now()) @updatedAt
  requirement   Requirement      @relation("RequirementToRequiredDocuments", onDelete: Cascade, fields: [requirementId], references: [id])
  requirementId Int
}

model Document {
  id Int @id @default(autoincrement())

  type DocumentTypeEnum
  url  String           @unique(map: "url") @db.VarChar(255)

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt

  mortgage   Mortgage? @relation(fields: [mortgageId], references: [id])
  mortgageId Int?

  propertyId Int?
  property   Property? @relation(fields: [propertyId], references: [id])

  Agent   Agent? @relation(fields: [agentId], references: [id])
  agentId Int?
}

enum ReferenceTypeEnum {
  PERSONAL
  PROFESSIONAL
}

model Reference {
  id           Int     @id @default(autoincrement())
  title        String? @db.VarChar(255)
  name         String  @db.VarChar(255)
  email        String? @db.VarChar(255)
  phone        String  @db.VarChar(255)
  relationship String  @db.VarChar(255)

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt

  mortgageId Int?
  mortgage   Mortgage? @relation(fields: [mortgageId], references: [id])
}

model Mortgage {
  id               Int      @id @default(autoincrement())
  firstName        String   @db.VarChar(255)
  lastName         String   @db.VarChar(255)
  email            String   @db.VarChar(255)
  phoneNumber      String?  @db.VarChar(255)
  dateOfBirth      DateTime @db.DateTime(0)
  intendedProperty String   @db.VarChar(255)
  monthlyIncome    Float
  valueOfProperty  Float    @default(0)
  country          String?  @default("") @db.VarChar(255)

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt

  status        MortgageStatusEnum
  residenceType ResidenceTypeEnum
  incomeProfile IncomeProfileEnum
  loanType      LoanTypeEnum

  additionalDetail    String? @db.VarChar(255)
  customerInformation String? @db.VarChar(255)
  favoriteCity        String? @db.VarChar(255)
  yearsInUae          Int?    @default(0)
  familyMembersInUae  Int?    @default(0)
  annualRentalIncome  Int?    @default(0)
  uaeResidenceAddress String? @db.VarChar(255)
  homeCountryAddress  String? @db.VarChar(255)

  maritalStatus    MaritalStatusEnum?
  educationType    EducationTypeEnum?
  financeType      FinanceTypeEnum?
  emirate          EmirateEnum?
  propertyType     PropertyTypeEnum?
  completionStatus CompletionStatusEnum?

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mortgage_userId_foreign_idx")

  documents  Document[]
  comments   Comment[]
  references Reference[]
  history    History[]

  @@index([userId], map: "Mortgages_userId_foreign_idx")
}

enum HistoryTypeEnum {
  MORTGAGE
  PROPERTY
  COMMENT
}

model History {
  id          Int             @id @default(autoincrement())
  title       String          @db.VarChar(255)
  description String          @db.Text
  type        HistoryTypeEnum

  mortgageId Int?
  mortgage   Mortgage? @relation(fields: [mortgageId], references: [id])

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt
}

model Comment {
  id Int @id @default(autoincrement())

  title       String @db.VarChar(255)
  message     String @db.Text
  attachments File[]

  userId Int
  user   User @relation(fields: [userId], references: [id])

  mortgageId Int
  mortgage   Mortgage @relation(fields: [mortgageId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "MortgageComments_ibfk_2")

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @updatedAt

  @@index([mortgageId], map: "mortgageId")
  @@index([userId], map: "userId")
}

model User {
  id               Int          @id @default(autoincrement())
  authId           String       @unique(map: "authId") @db.VarChar(255)
  firstName        String       @db.VarChar(255)
  lastName         String       @db.VarChar(255)
  email            String       @unique(map: "email") @db.VarChar(255)
  password         String       @db.VarChar(255)
  isEmailConfirmed Boolean?
  role             UserRoleEnum @default(GENERAL_USER)

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt

  agentId Int?
  agent   Agent?

  mortgages   Mortgage[]
  comments   Comment[]
  properties Property[]
  history History[]
}

model Location {
  id   Int     @id @default(autoincrement())
  name String? @unique(map: "name") @db.VarChar(255)

  emirate EmirateEnum?

  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt

  // properties Property[]
  agents Agent[]
}

model Amenity {
  id         Int              @id @default(autoincrement())
  name       String?          @unique(map: "name") @db.VarChar(255)
  createdAt  DateTime         @default(now()) @db.DateTime(0)
  updatedAt  DateTime         @default(now()) @updatedAt
  type       AmenityTypeEnum?
  property   Property?        @relation(fields: [propertyId], references: [id])
  propertyId Int?
}

model File {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  path      String   @unique(map: "path") @db.VarChar(255)
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @updatedAt

  propertyId Int?
  property   Property? @relation(fields: [propertyId], references: [id])
  Comment    Comment?  @relation(fields: [commentId], references: [id])
  commentId  Int?

  @@index([propertyId], map: "propertyId")
}

enum SubmissionStatusEnum {
  SUBMITTED
  UNDER_VERIFICATION
  APPROVED
  REJECTED
}

enum FurnishingStatusEnum {
  FULLY_FURNISHED
  SEMI_FURNISHED
  UNFURNISHED
}

model Property {
  id                   Int     @id @default(autoincrement())
  phone                String  @db.VarChar(255)
  name                 String  @db.VarChar(255)
  email                String  @db.VarChar(255) @default("")
  description          String? @db.Text
  image                String? @db.VarChar(255)
  callPreference       String? @db.VarChar(255)
  noticePeriodProperty Int?
  noticePeriodRent     Int?
  metroStationDistance Int?
  otherFeatures        String? @db.Text
  nearbyPlaces         String? @db.VarChar(255)
  airportDistance      Int?
  street               String? @db.VarChar(255)
  location             String? @db.VarChar(255)
  amount               Float?
  size                 Float?
  numberOfBedRooms     Int?
  numberOfBathRooms    Int?
  parkingSpaces        Int?
  maintenanceFee       Float?
  address              String? @db.VarChar(255)
  landmark             String? @db.Text

  completionDate    DateTime? @db.DateTime(0)
  minimumContract   Float?
  deedNumber        String?   @db.VarChar(255)
  unitNumber        Int?
  buildingName      String?   @db.VarChar(255)
  floor             Int?
  isApproved        Boolean?
  draft             String?   @db.Text
  paymentInterval   String?   @db.VarChar(255)
  numberOfCheques   Int?
  numberOfLavatory  Int?
  rentalAmount      Float?
  trakheesiPermitNo String?   @default("") @db.VarChar(255)
  lat               Float?    @db.Float
  lng               Float?    @db.Float

  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @updatedAt

  projectStatus    ProjectStatusEnum?
  occupencyStatus  OccupencyStatusEnum?
  propertyFor      PropertyForEnum?      @default(SALE)
  propertyType     PropertyTypeEnum?
  propertyCategory PropertyCategoryEnum?
  holdingType      HoldingTypeEnum?      @default(FREE_HOLD)
  emirate          EmirateEnum?
  submissionStatus SubmissionStatusEnum? @default(SUBMITTED)
  furnishingStatus FurnishingStatusEnum? @default(UNFURNISHED)

  // locationId Int?
  // location   Location? @relation(fields: [locationId], references: [id])

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Properties_userId_foreign_idx")

  agentId Int?
  agent   Agent? @relation(fields: [agentId], references: [id])

  documents Document[]
  amenities Amenity[]
  photos    File[]
}

enum ApprovalStatusEnum {
  APPROVED
  NOT_APPROVED
}

enum ActiveStatusEnum {
  ACTIVE
  INACTIVE
}

model Agent {
  id Int @id @default(autoincrement())

  agency        String? @db.VarChar(255)
  contactNumber String? @db.VarChar(255)

  activeStatus   ActiveStatusEnum @default(ACTIVE)
  approvalStatus ApprovalStatusEnum @default(NOT_APPROVED)

  documents  Document[]
  properties Property[]
  locations Location[]

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @updatedAt

  @@index([userId], map: "userId")
}

model Inqueries {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(255)
  lastName  String   @db.VarChar(255)
  budget    Int
  website   String   @db.VarChar(255)
  message   String   @db.Text
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
}

enum MaritalStatusEnum {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum EducationTypeEnum {
  ELEMENTARY_SCHOOL
  MIDDLE_SCHOOL
  HIGH_SCHOOL
  COLLEGE
  VOCATIONAL_SCHOOL
  GRADUATE_SCHOOL
  ONLINE_COURSES
  PROFESSIONAL_DEVELOPMENT
  HOMESCHOOLING
  LIFELONG_LEARNING
  SPECIALIZED_TRAINING_PROGRAMS
  LANGUAGE_COURSES
  CERTIFICATE_PROGRAMS
  TRADE_SCHOOLS
}

enum IncomeProfileEnum {
  SALARIED
  SELF_EMPLOYED
  RENTAL_INCOME
}

enum ResidenceTypeEnum {
  UAE_NATIONAL
  UAE_RESIDENT
  NON_UAE_RESIDENT
}

enum DocumentTypeEnum {
  PASSPORT_COPY
  VISA_COPY
  EMIRATES_ID
  BANK_STATEMENT_6_MONTHS
  BANK_STATEMENT_1_YEAR
  SALARY_CERTIFICATE
  TRADE_LICENSE
  MEMORANDUM_WITH_AMENDMENTS
  VAT_CERTIFICATE_RETURN_RECEIPTS
  OFFICE_TENANCY_CONTRACT_UTILITY_BILL
  COMPANY_PROFILE_WEBSITE
  TITLE_DEED_COPY
  TENANCY_CONTRACT_COPY
  RENTAL_CHEQUE_COPY
  BANK_STATEMENT_3_MONTHS_EQUIVALENT_AED_25000
  PROOF_OF_RESIDENCE
  PROOF_OF_INCOME
  COMPANY_BANK_STATEMENT_6_MONTHS
  OWNERSHIP_PROOF_MOBILE_NUMBER

  REAL_ESTATE_LICENSE
}

enum AmenityTypeEnum {
  PROPERTY
  BUILDING
  COMMUNITY
}

enum HoldingTypeEnum {
  FREE_HOLD
  LEASE_HOLD
}

enum UserRoleEnum {
  SUPER_ADMIN
  ADMIN
  GENERAL_USER
  AGENT
}

enum CompletionStatusEnum {
  COMPLETED
  UNDER_CONSTRUCTION
}

enum FinanceTypeEnum {
  ISLAMIC
  CONVENTIONAL
}

enum MortgageStatusEnum {
  SUBMITTED
  UNDER_DOCUMENTATION_STAGE
  SUBMITTED_TO_BANK
  APPROVED
  VALUATION_STAGE
  FINAL_OFFER_LETTER
  CASE_DISBURSED
  PROPERTY_TRANSFER
  TRANSACTION_COMPLETED
  CASE_CLOSED
  CASE_DECLINED
}

enum LoanTypeEnum {
  BUY_PROPERTY_FROM_SELLER
  BUY_PROPERTY_FROM_DEVELOPER
  SHIFT_PROPERTY_LOAN
  GET_CASH_AGAINST_EXISTING_PROPERTY
}

enum PropertyForEnum {
  SALE
  RENT
}

enum ProjectStatusEnum {
  OFF_PLAN_UNDER_CONSTRUCTION
  SHELL_AND_CORE
  COMPLETED
}

enum OccupencyStatusEnum {
  VACANT
  OCCUPIED
}

enum PropertyTypeEnum {
  RESIDENTIAL
  COMMERCIAL
}

enum PropertyCategoryEnum {
  APARTMENT_AND_UNIT
  VILLA
  ACREAGE
  BLOCK_OF_UNITS
  HOUSE
  TOWNHOUSE
  LAND
  BULK_UNIT
  COMMERCIAL_BUILDING
  COMMERCIAL_FLOOR
  COMMERCIAL_VILLA
  COMMERCIAL_PLOT
  FACTORY
  INDUSTRIAL_UNIT_FOR_SALE
  INDUSTRIAL_LAND
  MIXED_USED_SAND
  OFFICE_FOR_SALE
  RETAIL_FOR_SALE
  SHOP
  STAFF_ACCOMMODATION_FOR_SALE
  WAREHOUSE
  SELL_COMMERCIAL_LAND
  OTHER
}

enum EmirateEnum {
  DUBAI
  ABU_DHABI
  RAS_AL_KHAIMAH
  SHARJAH
  FUJAIRAH
  AJMAN
  UMM_AL_QUWAIN
}
